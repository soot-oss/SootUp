public class de.upb.soot.instructions.ref.ParameterRefTest extends java.lang.Object
{

    public void <init>()
    {
        de.upb.soot.instructions.ref.ParameterRefTest r0;

        r0 := @this: de.upb.soot.instructions.ref.ParameterRefTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void noParameter()
    {
        de.upb.soot.instructions.ref.ParameterRefTest r0;
        java.io.PrintStream $r1;

        r0 := @this: de.upb.soot.instructions.ref.ParameterRefTest;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("zero");

        return;
    }

    void oneParameter(int)
    {
        de.upb.soot.instructions.ref.ParameterRefTest r0;
        int i0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.io.PrintStream $r2;
        java.lang.String $r5;

        r0 := @this: de.upb.soot.instructions.ref.ParameterRefTest;

        i0 := @parameter0: int;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a =");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    void moreParameter(int, double)
    {
        de.upb.soot.instructions.ref.ParameterRefTest r0;
        int i0;
        double d0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6;
        java.io.PrintStream $r2;
        java.lang.String $r7;

        r0 := @this: de.upb.soot.instructions.ref.ParameterRefTest;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a =");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b = ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

        return;
    }

    void moreParameter(int, double, java.lang.String)
    {
        de.upb.soot.instructions.ref.ParameterRefTest r0;
        int i0;
        double d0;
        java.lang.String r1, $r10;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        java.io.PrintStream $r3;

        r0 := @this: de.upb.soot.instructions.ref.ParameterRefTest;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        r1 := @parameter2: java.lang.String;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a =");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" b = ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" str = ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r10);

        return;
    }
}
