public class de.upb.soot.concrete.arrays.Arrays extends java.lang.Object
{

    public void <init>()
    {
        de.upb.soot.concrete.arrays.Arrays r0;

        r0 := @this: de.upb.soot.concrete.arrays.Arrays;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void primitiveArray()
    {
        de.upb.soot.concrete.arrays.Arrays r0;
        int[] $r2;
        int $i0, $i1;
        java.io.PrintStream $r3, $r4;

        r0 := @this: de.upb.soot.concrete.arrays.Arrays;

        $r2 = newarray (int)[2];

        $r2[0] = 1;

        $r2[1] = 2;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $i0 = $r2[0];

        virtualinvoke $r3.<java.io.PrintStream: void println(int)>($i0);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $i1 = $r2[1];

        virtualinvoke $r4.<java.io.PrintStream: void println(int)>($i1);

        return;
    }

    public void primitiveArrayLengt()
    {
        de.upb.soot.concrete.arrays.Arrays r0;
        int[] $r2;
        int $i0;
        java.io.PrintStream $r3;

        r0 := @this: de.upb.soot.concrete.arrays.Arrays;

        $r2 = newarray (int)[2];

        $r2[0] = 1;

        $r2[1] = 2;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $i0 = lengthof $r2;

        virtualinvoke $r3.<java.io.PrintStream: void println(int)>($i0);

        return;
    }

    public void objectArray()
    {
        de.upb.soot.concrete.arrays.Arrays r0;
        java.lang.String[] $r2;
        java.lang.String $r3, $r5;
        java.io.PrintStream $r4, $r6;

        r0 := @this: de.upb.soot.concrete.arrays.Arrays;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "1";

        $r2[1] = "2";

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = $r2[0];

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r3);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = $r2[1];

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    public void manualAssignment()
    {
        de.upb.soot.concrete.arrays.Arrays r0;
        int[] r1;
        int $i0;
        java.io.PrintStream $r2;

        r0 := @this: de.upb.soot.concrete.arrays.Arrays;

        r1 = newarray (int)[1];

        r1[0] = 1;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $i0 = r1[0];

        virtualinvoke $r2.<java.io.PrintStream: void println(int)>($i0);

        return;
    }

    public void twoDimensions()
    {
        de.upb.soot.concrete.arrays.Arrays r0;
        int[][] r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r8, $r10, $r12;
        int $i0, $i1, $i2, $i3;
        java.io.PrintStream $r7, $r9, $r11, $r13;

        r0 := @this: de.upb.soot.concrete.arrays.Arrays;

        r1 = newmultiarray (int)[2][2];

        $r2 = r1[0];

        $r2[0] = 1;

        $r3 = r1[0];

        $r3[1] = 2;

        $r4 = r1[1];

        $r4[0] = 3;

        $r5 = r1[1];

        $r5[1] = 4;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = r1[0];

        $i0 = $r6[0];

        virtualinvoke $r7.<java.io.PrintStream: void println(int)>($i0);

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = r1[0];

        $i1 = $r8[1];

        virtualinvoke $r9.<java.io.PrintStream: void println(int)>($i1);

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = r1[1];

        $i2 = $r10[0];

        virtualinvoke $r11.<java.io.PrintStream: void println(int)>($i2);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = r1[1];

        $i3 = $r12[1];

        virtualinvoke $r13.<java.io.PrintStream: void println(int)>($i3);

        return;
    }
}
