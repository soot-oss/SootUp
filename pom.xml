<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.upb</groupId>
	<artifactId>Soot</artifactId>
	<packaging>jar</packaging>
	<version>4.0-SNAPSHOT</version>
	<name>Soot</name>
	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.version>3.8.0</maven.compiler.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven-checkstyle-plugin.version>3.0.0</maven-checkstyle-plugin.version>
		<checkstyle.version>8.9</checkstyle.version>
		<checkstyle.dir.path>${basedir}/codingstyle</checkstyle.dir.path>
		<checkstyle.file.path>${checkstyle.dir.path}/google_checkstyle.xml</checkstyle.file.path>
		<maven-surefire-plugin.version>3.0.0-M3</maven-surefire-plugin.version>
		<jacoco-maven-plugin.version>0.8.1</jacoco-maven-plugin.version>
		<jacoco-badge-maven-plugin.version>0.1.3</jacoco-badge-maven-plugin.version>
		<slf4j.version>1.7.25</slf4j.version>
		<slf4j-simple.version>1.7.25</slf4j-simple.version>
		<guava.version>25.1-jre</guava.version>
		<apache-commons.version>3.5</apache-commons.version>
		<apache-commons-io.version>2.6</apache-commons-io.version>
		<junit.version>4.12</junit.version>
		<powermock-module-junit4.version>1.7.3</powermock-module-junit4.version>
		<powermock-api-mockito.version>1.7.3</powermock-api-mockito.version>
		<test.sourceDir>${project.basedir}/src/test/java</test.sourceDir>
		<test.outDir>${project.build.directory}/test-classes-java</test.outDir>
		<checkstyle.failOnViolation>true</checkstyle.failOnViolation>
        <licence-check.failOnMissingHeader>true</licence-check.failOnMissingHeader>
	</properties>

	<profiles>
		<profile>
			<id>Java8</id>
			<properties>
				<testcase.groups>categories.Java8Test</testcase.groups>
			</properties>
		</profile>
		<profile>
			<id>Java9</id>
			<properties>
				<testcase.groups>categories.Java9Test</testcase.groups>
			</properties>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>${checkstyle.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>checkstyle</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<propertyExpansion>config_loc=${checkstyle.dir.path}</propertyExpansion>
					<configLocation>${checkstyle.file.path}</configLocation>
					<suppressionsLocation>${checkstyle.dir.path}/checkstyle_supressions.xml</suppressionsLocation>
					<encoding>UTF-8</encoding>
					<logViolationsToConsole>true</logViolationsToConsole>
					<failOnViolation>true</failOnViolation>
					<violationSeverity>warning</violationSeverity>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<!--Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<!--Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!--Ensures that the code coverage report for unit tests is created 
						after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.sigpwned</groupId>
				<artifactId>jacoco-badge-maven-plugin</artifactId>
				<version>${jacoco-badge-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>generate-jacoco-badge</id>
						<phase>verify</phase>
						<goals>
							<goal>badge</goal>
						</goals>
						<configuration>
							<reportFile>${project.reporting.outputDirectory}/jacoco-ut/jacoco.csv</reportFile>
							<!-- <passing>70</passing>
							 Legal values: instruction, branch, line, methodRef. Optional, default
								instruction. -->
							<metric>method</metric>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<groups>${testcase.groups}</groups>
				</configuration>
			</plugin>
			<plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <groupId>org.apache.maven.plugins</groupId>
                <version>2.10.3</version>
                <configuration>
                    <fixTags>author</fixTags>
                    <force>true</force>
                    <fixFieldComment>false</fixFieldComment>
                    <fixMethodComment>false</fixMethodComment>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>1.16</version>
                <configuration>
                    <failOnMissingHeader>${licence-check.failOnMissingHeader}</failOnMissingHeader>
                    <failOnNotUptodateHeader>${licence-check.failOnMissingHeader}</failOnNotUptodateHeader>
                    <inceptionYear>2018</inceptionYear>
                    <addJavaLicenseAfterPackage>true</addJavaLicenseAfterPackage>
                    <licenseName>lgpl_v2_1</licenseName>
                    <organizationName>Secure Software Engineering Department, University of Paderborn</organizationName>
                    <roots>
                        <root>src/main/java</root>
                        <root>src/test/java</root>
                        <root>src/test/java8</root>
                    </roots>
                </configuration>
                <executions>
                    <execution>
                        <id>license-check</id>
                        <goals>
                            <goal>check-file-header</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j-simple.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${apache-commons.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${apache-commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<!-- testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.powermock/powermock-module-junit4 -->
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock-module-junit4.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.powermock/powermock-api-mockito -->
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock-api-mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- asm bytecode frontend -->
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-util</artifactId>
			<version>7.0</version>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-commons</artifactId>
			<version>7.0</version>
		</dependency>


		<!-- wala source code front-end dependences -->
		<dependency>
			<groupId>com.ibm.wala</groupId>
			<artifactId>com.ibm.wala.core</artifactId>
			<version>1.5.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.wala</groupId>
			<artifactId>com.ibm.wala.cast</artifactId>
			<version>1.5.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.wala</groupId>
			<artifactId>com.ibm.wala.cast.java</artifactId>
			<version>1.5.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.wala</groupId>
			<artifactId>com.ibm.wala.cast.java.ecj</artifactId>
			<version>1.5.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.wala</groupId>
			<artifactId>com.ibm.wala.util</artifactId>
			<version>1.5.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.wala</groupId>
			<artifactId>com.ibm.wala.shrike</artifactId>
			<version>1.5.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.core</groupId>
			<artifactId>runtime</artifactId>
			<version>3.10.0-v20140318-2214</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jdt</groupId>
			<artifactId>org.eclipse.jdt.core</artifactId>
			<version>3.10.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.typesafe.akka/akka-actor -->
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-actor_2.12</artifactId>
			<version>2.5.14</version>
		</dependency>
		<!-- add supports from new soot to old soot -->
		<dependency>
			<groupId>ca.mcgill.sable</groupId>
			<artifactId>soot</artifactId>
			<version>3.1.0-SNAPSHOT</version>
		</dependency>
		<!-- adds `@Nullable` and `@Nonnull` annotations -->
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>3.0.2</version>
		</dependency>
	</dependencies>
	<repositories>
		<!-- include wala from sonatype public repository -->
		<repository>
			<id>sonatype-public-repository</id>
			<url>https://oss.sonatype.org/content/groups/public</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<!-- include old soot repo -->
		<repository>
			<id>swt-upb</id>
			<name>soot snapshots</name>
			<url>https://soot-build.cs.uni-paderborn.de/nexus/repository/swt-upb/</url>
		</repository>
	</repositories>
</project>
